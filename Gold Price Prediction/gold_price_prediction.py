# -*- coding: utf-8 -*-
"""Gold Price Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cspAPtmaF9_jWA_LZwysm6rxTuAHWl0m
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics
import pickle

gold_data = pd.read_csv('/content/gld_price_data.csv')

gold_data.head()

gold_data.shape

gold_data.info()

gold_data.isna().sum()

correlation = gold_data.corr()
plt.figure(figsize = (8,8))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f',annot=True, annot_kws={'size':8}, cmap='Blues')
plt.show()

# checking the distribution of the GLD Price
sns.distplot(gold_data['GLD'],color='red')

X = gold_data.drop(['Date','GLD'],axis=1)
Y = gold_data['GLD']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state=42)

model = RandomForestRegressor(n_estimators=100)
model.fit(X_train,Y_train)

test_data_prediction = model.predict(X_test)

error_score = metrics.r2_score(Y_test, test_data_prediction)
print("R squared error : ", error_score)

Y_test = list(Y_test)

plt.plot(Y_test, color='blue', label = 'Actual Value')
plt.plot(test_data_prediction, color='green', label='Predicted Value')
plt.title('Actual Price vs Predicted Price')
plt.xlabel('Number of values')
plt.ylabel('GLD Price')
plt.legend()
plt.show()

pickle.dump(model, open('gld_pricr_pridction.pkl','wb'))